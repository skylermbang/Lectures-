


/*
###################2.1  #############################
Grid  most of time you talk to father like you did for the flexbox 


.father {
  display: grid;
  grid-template-columns: 20px 50px 100px 200px;  (no , betwwen )
}





######################    2.2 ################################
.father {
  display: grid;
  grid-template-columns: repeat(3, 250px);
  grid-template-rows: repeat(3, 250px);
  gap: 10px;
}

.child {
  flex-basis: 30%;
  background: rgb(252, 214, 177);
  color: black;
}


 ##################### 2.3 ################################
 .father {
  display: grid;
  grid-template-columns: repeat(4, 100px);
  grid-template-rows: repeat(4, 100px);
  gap: 10px;
  grid-template-areas:
    "header header header header"
    "content content content nav"
    "content content content nav"
    "footer footer footer footer ";
}

.child {
  flex-basis: 30%;
  background: rgb(252, 214, 177);
  color: black;
}

.header {
  background-color: beige;
  grid-area: header;
}

.nav {
  background-color: rgb(185, 243, 158);
  grid-area: nav;
}

.content {
  background-color: rgb(122, 86, 110);
  grid-area: content;
}

.footer {
  background-color: rgb(100, 116, 168);
  grid-area: footer;
}

 

##################### 2.4################################
.father {
  display: grid;
  grid-template-columns: repeat(4, 100px);
  grid-template-rows: repeat(4, 100px);
  gap: 10px;
}

.child {
  flex-basis: 30%;
  background: rgb(252, 214, 177);
  color: black;
}

.header {
  background-color: beige;
  grid-column-start: 1;
  grid-column-end: 5;
}

.nav {
  background-color: rgb(185, 243, 158);
  grid-column-start: 4;
  grid-column-end: 5;
  grid-row-start: 2;
  grid-row-end: 4;
}

.content {
  background-color: rgb(122, 86, 110);
  grid-column-start: 1;
  grid-column-end: 4;
  grid-row-start: 2;
  grid-row-end: 4;
}

.footer {
  background-color: rgb(100, 116, 168);
  grid-column-start: 1;
  grid-column-end: 5;
}



 ##################### 2.5 ################################
 .father {
  display: grid;
  grid-template-columns: repeat(4, 100px);
  grid-template-rows: repeat(4, 100px);
  gap: 10px;
}

.child {
  flex-basis: 30%;
  background: rgb(252, 214, 177);
  color: black;
}

.header {
  background-color: beige;
  grid-column: 1/-1;   -1 : the last one 
}

.nav {
  background-color: rgb(185, 243, 158);
  grid-column: 4/5;
  grid-row: 2/4;
}

.content {
  background-color: rgb(122, 86, 110);
  grid-column: 1/4;
  grid-row: 2/4;
}

.footer {
  background-color: rgb(100, 116, 168);
  grid-column: span 4;
}


 ##################### 2.6 ################################

 ##################### 2.9################################
  justify-content : 
   start (default) , center (move the whole grid to center) , 
   space-around / space-evenly / space-betwwen   : horizon stuff

 aling-contetn :
   first of all have to have height:  (200vh?)
   start (default)
   end (go to down)
   stretch( stretch if  grid-template-rows:repeat(4, 1fr) )

 place-content : vertical horizontal ;



##################### 2.10 ################################

 for the individual cell 
 aling-self: 
 justify-self:
 place-self: (vertical horizontal)

grid-auto-rows: 100px ; 
 if you have more contents than the row , than the auto size of 100px will come   
 + you have to have the grid-template-row: repeat(4 100px); already 

grid-auto-flow: columns/ row(default)
 in stead you add more rows you want to have new colums 
 grid-auto-column: 100px;
 normally you will stick with rows 

##################### 2.11################################
grid-template-columns: repeat(2, minma(100px, 1fr));

##################### 2.12################################

repreat(auto-fill, minmax(1fr,2fr);    auto fill the width with  , more place
repreat(auto-fit, minmax(1fr,2fr);  strecth the content ,  its strecth 
##################### 2.8 ################################

##################### 2.8 ################################
